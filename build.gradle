//buildscript {
//  repositories {
//  	mavenCentral()
//  	maven {
//  		name = "GradleRIO"
//  		url = "http://dev.imjac.in/maven"
//  	}
//
//  	flatDir name: 'navxDir', dirs: "${System.env.HOME}/wpilib/user/java/lib"
//
//  }
//  dependencies {
//    classpath group: 'jaci.openrio.gradle', name: 'GradleRIO', version: '4.4.3'	    //+ for latest version		//Change this line if you wish to Update GradleRIO
//
//  }
//}

plugins {
    id "java"
    id "eclipse"
    id "idea"
    id "jaci.openrio.gradle.GradleRIO" version "2017.1.2"
}

frc {
    team = "2502"
    robotClass = "com.team2502.robot2017.Robot"     //The class for the main Robot Class. Used in manifest
    //Your FRC team number (e.g. 5333 for team 'Can't C#', or 47 for Chief Delphi)
    //rioIP = "10.25.2.2"                             //Uncomment to specify the IP address of the RIO
}

repositories {
    mavenCentral()
}

dependencies {
    compile wpilib()
    compile talonSrx()
    compile talonSrxJni()
    compile navx()

    compile "org.jetbrains:annotations:15.0" // Provides useful annotations like @NotNull & @Nullable
//    compile files("${System.env.HOME}/wpilib/user/java/lib/navx_frc.jar")

}

def robotManifest = {
    attributes 'Main-Class': 'edu.wpi.first.wpilibj.RobotBase'
    attributes 'Robot-Class': frc.robotClass
}

task copyVersionFile(type: Exec) {
    workingDir '.git/hooks'
    commandLine './copyVersionFile.sh'
}

task copyHooks(type: Copy) {
    from 'hooks/'
    into '.git/hooks/'
}

jar {
    dependsOn copyHooks
    dependsOn copyVersionFile
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    manifest robotManifest
}

task genJavadoc(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives genJavadoc
}

genJavadoc.onlyIf { project.hasProperty('runJavadoc') }
javadoc.onlyIf { project.hasProperty('runJavadoc') }

task wrapper(type: Wrapper) {
    gradleVersion = '3.2.1'
}
